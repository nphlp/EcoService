# Configuration Docker Compose pour le dÃ©veloppement
# Usage: docker compose -f compose.dev.yml up -d

services:
    mysql:
        image: mysql:9.3
        container_name: mysql
        restart: unless-stopped
        command:
            [
                "mysqld",
                "--ssl-ca=/etc/mysql/certs/ca.pem",
                "--ssl-cert=/etc/mysql/certs/server-cert.pem",
                "--ssl-key=/etc/mysql/certs/server-key.pem",
            ]
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            # SSL server certs (read-only)
            - ./docker/certs:/etc/mysql/certs:ro
            # MySQL data (volume)
            - mysql-dev-volume:/var/lib/mysql
        ports:
            - "${MYSQL_PORT}:3306"
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-u",
                    "root",
                    "-p${MYSQL_ROOT_PASSWORD}",
                    "--ssl-ca=/etc/mysql/certs/ca.pem",
                ]
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 60s
        networks:
            - nextjs-dev-network

    redis:
        image: redis/redis-stack:latest
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379" # Redis server
            - "8001:8001" # Redis dashboard
        volumes:
            - redis-dev-volume:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 60s
        networks:
            - nextjs-dev-network

    nextjs:
        build:
            context: ./
            dockerfile: ./docker/Dockerfile.dev
        container_name: nextjs
        ports:
            - "3000:3000"
        restart: unless-stopped
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        volumes:
            # SSL client certs (read-only)
            - ./docker/certs:/app/docker/certs:ro
            # .env (read-only)
            - ./.env.dev:/app/.env:ro
            # Codebase (read-write) -> hot reload
            - .:/app
            # node_modules (volume)
            - deps-dev-volume:/app/node_modules
        environment:
            - REDIS_URL=redis://redis:6379
        networks:
            - nextjs-dev-network

volumes:
    deps-dev-volume:
        driver: local
    mysql-dev-volume:
        driver: local
    redis-dev-volume:
        driver: local

networks:
    nextjs-dev-network:
        driver: bridge
