import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";

/**
 * # Article Type Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/types/{{model}}Type.hbs` as base template
 * - to generate types files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ============== Utils ============== //

type Payload = Prisma.$ArticlePayload<InternalArgs>;

type Flatten<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;

// ============== Model ============== //

/**
 * Article native fields only
 */
export type ArticleModel = Flatten<Payload["scalars"]>;

/**
 * Article relations fields only
 */
export type ArticleRelations = {
    [K in keyof Payload["objects"]]: Payload["objects"][K] extends Array<infer T>
        ? T extends { scalars: unknown }
            ? Flatten<T["scalars"]>[]
            : never
        : Payload["objects"][K] extends { scalars: unknown }
          ? Flatten<Payload["objects"][K]["scalars"]>
          : never;
};

/**
 * Article native and relations fields
 */
export type ArticleComplete = Flatten<ArticleModel & ArticleRelations>;

/**
 * Article count type
 */
export type ArticleCount = number;

// ========== Types ========== //

/**
 * Article Create props
 */
export type ArticleCreateProps<T extends Prisma.ArticleCreateArgs = Prisma.ArticleCreateArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleCreateArgs
>;

/**
 * Article Create response
 */
export type ArticleCreateResponse<T extends Prisma.ArticleCreateArgs = Prisma.ArticleCreateArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "create",
    PrismaClientOptions
>;

/**
 * Article Upsert props
 */
export type ArticleUpsertProps<T extends Prisma.ArticleUpsertArgs = Prisma.ArticleUpsertArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleUpsertArgs
>;

/**
 * Article Upsert response
 */
export type ArticleUpsertResponse<T extends Prisma.ArticleUpsertArgs = Prisma.ArticleUpsertArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "upsert",
    PrismaClientOptions
>;

/**
 * Article Update props
 */
export type ArticleUpdateProps<T extends Prisma.ArticleUpdateArgs = Prisma.ArticleUpdateArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleUpdateArgs
>;

/**
 * Article Update response
 */
export type ArticleUpdateResponse<T extends Prisma.ArticleUpdateArgs = Prisma.ArticleUpdateArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "update",
    PrismaClientOptions
>;

/**
 * Article Delete props
 */
export type ArticleDeleteProps<T extends Prisma.ArticleDeleteArgs = Prisma.ArticleDeleteArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleDeleteArgs
>;

/**
 * Article Delete response
 */
export type ArticleDeleteResponse<T extends Prisma.ArticleDeleteArgs = Prisma.ArticleDeleteArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "delete",
    PrismaClientOptions
>;

/**
 * Article Create Many props
 */
export type ArticleCreateManyProps<T extends Prisma.ArticleCreateManyArgs = Prisma.ArticleCreateManyArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleCreateManyArgs>;

/**
 * Article Create Many response
 */
export type ArticleCreateManyResponse = Prisma.PrismaPromise<Prisma.BatchPayload>;

/**
 * Article Update Many props
 */
export type ArticleUpdateManyProps<T extends Prisma.ArticleUpdateManyArgs = Prisma.ArticleUpdateManyArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleUpdateManyArgs>;

/**
 * Article Update Many response
 */
export type ArticleUpdateManyResponse = Prisma.PrismaPromise<Prisma.BatchPayload>;

/**
 * Article Delete Many props
 */
export type ArticleDeleteManyProps<T extends Prisma.ArticleDeleteManyArgs = Prisma.ArticleDeleteManyArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleDeleteManyArgs>;

/**
 * Article Delete Many response
 */
export type ArticleDeleteManyResponse = Prisma.PrismaPromise<Prisma.BatchPayload>;

/**
 * Article Find First props
 */
export type ArticleFindFirstProps<T extends Prisma.ArticleFindFirstArgs = Prisma.ArticleFindFirstArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleFindFirstArgs>;

/**
 * Article Find First response
 */
export type ArticleFindFirstResponse<T extends Prisma.ArticleFindFirstArgs = Prisma.ArticleFindFirstArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

/**
 * Article Find Unique props
 */
export type ArticleFindUniqueProps<T extends Prisma.ArticleFindUniqueArgs = Prisma.ArticleFindUniqueArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleFindUniqueArgs>;

/**
 * Article Find Unique response
 */
export type ArticleFindUniqueResponse<T extends Prisma.ArticleFindUniqueArgs = Prisma.ArticleFindUniqueArgs> =
    GetResult<Prisma.$ArticlePayload<InternalArgs>, T, "findUnique", PrismaClientOptions>;

/**
 * Article Find Many props
 */
export type ArticleFindManyProps<T extends Prisma.ArticleFindManyArgs = Prisma.ArticleFindManyArgs> =
    Prisma.SelectSubset<T, Prisma.ArticleFindManyArgs>;

/**
 * Article Find Many response
 */
export type ArticleFindManyResponse<T extends Prisma.ArticleFindManyArgs = Prisma.ArticleFindManyArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

/**
 * Article Count props
 */
export type ArticleCountProps<T extends Prisma.ArticleCountArgs = Prisma.ArticleCountArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleCountArgs
>;

/**
 * Article Count response
 */
export type ArticleCountResponse<T extends Prisma.ArticleCountArgs = Prisma.ArticleCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.ArticleCountAggregateOutputType>
        : number;
