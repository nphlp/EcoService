import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import {
    ArticleCountCached,
    ArticleFindFirstCached,
    ArticleFindManyCached,
    ArticleFindUniqueCached,
} from "@services/cached";

/**
 * # Article Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type ArticleFindFirstProps<T extends Prisma.ArticleFindFirstArgs> = Prisma.SelectSubset<T, Prisma.ArticleFindFirstArgs>;
type ArticleFindFirstResponse<T extends Prisma.ArticleFindFirstArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type ArticleFindUniqueProps<T extends Prisma.ArticleFindUniqueArgs> = Prisma.SelectSubset<
    T,
    Prisma.ArticleFindUniqueArgs
>;
type ArticleFindUniqueResponse<T extends Prisma.ArticleFindUniqueArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type ArticleFindManyProps<T extends Prisma.ArticleFindManyArgs> = Prisma.SelectSubset<T, Prisma.ArticleFindManyArgs>;
type ArticleFindManyResponse<T extends Prisma.ArticleFindManyArgs> = GetResult<
    Prisma.$ArticlePayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type ArticleCountProps<T extends Prisma.ArticleCountArgs> = Prisma.SelectSubset<T, Prisma.ArticleCountArgs>;
type ArticleCountResponse<T extends Prisma.ArticleCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.ArticleCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Article Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ArticleFindFirstServer = async <T extends Prisma.ArticleFindFirstArgs>(
    params: ArticleFindFirstProps<T>,
): Promise<ArticleFindFirstResponse<T>> => {
    return await ArticleFindFirstCached(params);
};

/**
 * ## Article Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ArticleFindUniqueServer = async <T extends Prisma.ArticleFindUniqueArgs>(
    params: ArticleFindUniqueProps<T>,
): Promise<ArticleFindUniqueResponse<T>> => {
    return await ArticleFindUniqueCached(params);
};

/**
 * ## Article Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ArticleFindManyServer = async <T extends Prisma.ArticleFindManyArgs>(
    params: ArticleFindManyProps<T>,
): Promise<ArticleFindManyResponse<T>> => {
    return await ArticleFindManyCached(params);
};

/**
 * ## Article Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const ArticleCountServer = async <T extends Prisma.ArticleCountArgs>(
    params: ArticleCountProps<T>,
): Promise<ArticleCountResponse<T>> => {
    return await ArticleCountCached(params);
};
