import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import { OrderCountCached, OrderFindFirstCached, OrderFindManyCached, OrderFindUniqueCached } from "@services/cached";

/**
 * # Order Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type OrderFindFirstProps<T extends Prisma.OrderFindFirstArgs> = Prisma.SelectSubset<T, Prisma.OrderFindFirstArgs>;
type OrderFindFirstResponse<T extends Prisma.OrderFindFirstArgs> = GetResult<
    Prisma.$OrderPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type OrderFindUniqueProps<T extends Prisma.OrderFindUniqueArgs> = Prisma.SelectSubset<T, Prisma.OrderFindUniqueArgs>;
type OrderFindUniqueResponse<T extends Prisma.OrderFindUniqueArgs> = GetResult<
    Prisma.$OrderPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type OrderFindManyProps<T extends Prisma.OrderFindManyArgs> = Prisma.SelectSubset<T, Prisma.OrderFindManyArgs>;
type OrderFindManyResponse<T extends Prisma.OrderFindManyArgs> = GetResult<
    Prisma.$OrderPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type OrderCountProps<T extends Prisma.OrderCountArgs> = Prisma.SelectSubset<T, Prisma.OrderCountArgs>;
type OrderCountResponse<T extends Prisma.OrderCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.OrderCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## Order Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const OrderFindFirstServer = async <T extends Prisma.OrderFindFirstArgs>(
    params: OrderFindFirstProps<T>,
): Promise<OrderFindFirstResponse<T>> => {
    return await OrderFindFirstCached(params);
};

/**
 * ## Order Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const OrderFindUniqueServer = async <T extends Prisma.OrderFindUniqueArgs>(
    params: OrderFindUniqueProps<T>,
): Promise<OrderFindUniqueResponse<T>> => {
    return await OrderFindUniqueCached(params);
};

/**
 * ## Order Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const OrderFindManyServer = async <T extends Prisma.OrderFindManyArgs>(
    params: OrderFindManyProps<T>,
): Promise<OrderFindManyResponse<T>> => {
    return await OrderFindManyCached(params);
};

/**
 * ## Order Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const OrderCountServer = async <T extends Prisma.OrderCountArgs>(
    params: OrderCountProps<T>,
): Promise<OrderCountResponse<T>> => {
    return await OrderCountCached(params);
};
