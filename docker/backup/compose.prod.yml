# Docker Prod Config
# See more: `./docs/installation-guides/docker.md > Prod section`

services:
    mysql:
        image: mysql:9.3
        container_name: mysql
        restart: unless-stopped
        command:
            [
                "mysqld",
                "--ssl-ca=/etc/mysql/certs/ca.pem",
                "--ssl-cert=/etc/mysql/certs/server-cert.pem",
                "--ssl-key=/etc/mysql/certs/server-key.pem",
            ]
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            # SSL server certs (read-only)
            - ../certs:/etc/mysql/certs:ro
            # MySQL data (volume)
            - mysql-prod-volume:/var/lib/mysql
        ports:
            - "${MYSQL_PORT}:3306"
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-u",
                    "root",
                    "-p${MYSQL_ROOT_PASSWORD}",
                    "--ssl-ca=/etc/mysql/certs/ca.pem",
                ]
            interval: 2s
            timeout: 1s
            retries: 30
            start_period: 10s
        networks:
            - nextjs-prod-network

    builder:
        build:
            context: ../../
            dockerfile: ./docker/dockerfile/Dockerfile.builder
        container_name: builder
        volumes:
            # SSL client certs (read-only)
            - ../certs:/app/docker/certs:ro
            # Environment file
            - ../../.env.prod:/app/.env:ro
            # Build cache (volume)
            - app-build-cache:/app/.next/cache
            # Build output (volume)
            - app-build:/app/build-output
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - nextjs-prod-network

    runner:
        build:
            context: ../../
            dockerfile: ./docker/dockerfile/Dockerfile.runner
        container_name: nextjs
        ports:
            - "3000:3000"
        volumes:
            # SSL client certs (read-only)
            - ../certs:/app/docker/certs:ro
            # Environment file
            - ../../.env.prod:/app/.env:ro
            # Build output (volume)
            - app-build:/app
        depends_on:
            builder:
                condition: service_completed_successfully
            mysql:
                condition: service_healthy
        restart: unless-stopped
        networks:
            - nextjs-prod-network

volumes:
    mysql-prod-volume:
        driver: local
    app-build:
        driver: local
    app-build-cache:
        driver: local

networks:
    nextjs-prod-network:
        driver: bridge
